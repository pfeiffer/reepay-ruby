=begin
#API

#REST API to manage Reepay resources

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Reepay::CouponApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CouponApi' do
  before do
    # run before each test
    @instance = Reepay::CouponApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CouponApi' do
    it 'should create an instance of CouponApi' do
      expect(@instance).to be_instance_of(Reepay::CouponApi)
    end
  end

  # unit tests for create_coupon
  # Create coupon
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCoupon] :body 
  # @return [Coupon]
  describe 'create_coupon test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_coupon
  # Delete coupon
  # 
  # @param handle Coupon handle
  # @param [Hash] opts the optional parameters
  # @return [Coupon]
  describe 'delete_coupon test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for expire_coupon
  # Expire coupon
  # 
  # @param handle Coupon handle
  # @param [Hash] opts the optional parameters
  # @return [Coupon]
  describe 'expire_coupon test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupon
  # Get coupon
  # 
  # @param handle Coupon handle
  # @param [Hash] opts the optional parameters
  # @return [Coupon]
  describe 'get_coupon test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupons
  # Get list of coupons
  # 
  # @param page Page number to get
  # @param size Page size to use
  # @param search Optional search expression
  # @param sort Optional sorting expression
  # @param [Hash] opts the optional parameters
  # @return [CouponSearch]
  describe 'get_coupons test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_coupon
  # Update coupon
  # 
  # @param handle Coupon handle
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateCoupon] :body 
  # @return [Coupon]
  describe 'update_coupon test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_code
  # Validate coupon
  # 
  # @param code Coupon code
  # @param [Hash] opts the optional parameters
  # @option opts [String] :plan Optional plan to validate against
  # @option opts [String] :customer Optional customer to validate against
  # @return [Coupon]
  describe 'validate_code test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
