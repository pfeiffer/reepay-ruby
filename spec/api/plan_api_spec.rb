=begin
#API

#REST API to manage Reepay resources

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Reepay::PlanApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PlanApi' do
  before do
    # run before each test
    @instance = Reepay::PlanApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PlanApi' do
    it 'should create an instance of PlanApi' do
      expect(@instance).to be_instance_of(Reepay::PlanApi)
    end
  end

  # unit tests for create_plan_json
  # Create plan
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateSubscriptionPlan] :body 
  # @return [Plan]
  describe 'create_plan_json test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_plan
  # Delete plan
  # 
  # @param handle Subscription plan handle
  # @param [Hash] opts the optional parameters
  # @return [Plan]
  describe 'delete_plan test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_plan
  # Get plan
  # 
  # @param handle Plan handle
  # @param [Hash] opts the optional parameters
  # @return [Plan]
  describe 'get_current_plan test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_plan
  # Get plan version
  # 
  # @param handle Plan handle
  # @param version Plan version
  # @param [Hash] opts the optional parameters
  # @return [Plan]
  describe 'get_plan test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_plans
  # Get list of plan versions
  # 
  # @param handle Plan handle
  # @param [Hash] opts the optional parameters
  # @return [Array<Plan>]
  describe 'get_plans test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_plans_list
  # Get list of plans
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :only_active Get only active
  # @return [Array<Plan>]
  describe 'get_plans_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for supersede_plan_json
  # Supersede plan
  # 
  # @param handle Plan handle
  # @param [Hash] opts the optional parameters
  # @option opts [SupersedeSubscriptionPlan] :body 
  # @return [Plan]
  describe 'supersede_plan_json test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_plan_json
  # Update plan
  # 
  # @param handle Subscription handle
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateSubscriptionPlan] :body 
  # @return [Plan]
  describe 'update_plan_json test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
