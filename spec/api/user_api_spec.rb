=begin
#API

#REST API to manage Reepay resources

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Reepay::UserApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UserApi' do
  before do
    # run before each test
    @instance = Reepay::UserApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserApi' do
    it 'should create an instance of UserApi' do
      expect(@instance).to be_instance_of(Reepay::UserApi)
    end
  end

  # unit tests for delete_user
  # Delete user
  # 
  # @param id User id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # Get user
  # 
  # @param id User id
  # @param [Hash] opts the optional parameters
  # @return [UserAccount]
  describe 'get_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users
  # Get users
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<UserAccount>]
  describe 'get_users test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for invite_user
  # Invite user
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [InviteUser] :body 
  # @return [UserAccount]
  describe 'invite_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for invite_user_accept
  # Accept invite
  # 
  # @param token Invite token
  # @param [Hash] opts the optional parameters
  # @option opts [InviteUserAccept] :body 
  # @return [UserAccount]
  describe 'invite_user_accept test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for invite_user_get
  # Get invite
  # 
  # @param token Invite token
  # @param [Hash] opts the optional parameters
  # @return [UserAccount]
  describe 'invite_user_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reset_password
  # Reset password request
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [UserResetRequestPassword] :body 
  # @return [nil]
  describe 'reset_password test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reset_password_with_token
  # Reset password
  # 
  # @param token Reset password token
  # @param [Hash] opts the optional parameters
  # @option opts [ResetUserPassword] :body 
  # @return [User]
  describe 'reset_password_with_token test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_auth
  # Update user groups
  # 
  # @param id User id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateUserGroups] :body 
  # @return [UserAccount]
  describe 'update_auth test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_password
  # Change password
  # 
  # @param id User id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateUserPassword] :body 
  # @return [UserAccount]
  describe 'update_password test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user
  # Update user
  # 
  # @param id User id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateUser] :body 
  # @return [UserAccount]
  describe 'update_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_email
  # Verify email
  # 
  # @param token Verify email token
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'verify_email test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_email_request
  # Send verification email
  # 
  # @param id User id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'verify_email_request test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
