=begin
#API

#REST API to manage Reepay resources

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Reepay::ChargeApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ChargeApi' do
  before do
    # run before each test
    @instance = Reepay::ChargeApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ChargeApi' do
    it 'should create an instance of ChargeApi' do
      expect(@instance).to be_instance_of(Reepay::ChargeApi)
    end
  end

  # unit tests for cancel_charge
  # Cancel charge
  # 
  # @param handle Charge handle
  # @param [Hash] opts the optional parameters
  # @return [Charge]
  describe 'cancel_charge test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_charge
  # Create charge
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCharge] :body 
  # @return [Charge]
  describe 'create_charge test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_charge
  # Get charge
  # 
  # @param handle Charge handle
  # @param [Hash] opts the optional parameters
  # @return [Charge]
  describe 'get_charge test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_charges
  # Get charges
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to get
  # @option opts [Integer] :size Page size to use
  # @option opts [String] :search Optional search expression
  # @option opts [String] :sort Optional sorting expression
  # @return [ChargeSearch]
  describe 'get_charges test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for prepare_charge
  # Prepare charge
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [PrepareChargeDto] :body 
  # @return [Charge]
  describe 'prepare_charge test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for settle_charge
  # Settle charge
  # 
  # @param handle Charge handle
  # @param [Hash] opts the optional parameters
  # @option opts [SettleCharge] :body 
  # @return [Charge]
  describe 'settle_charge test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
