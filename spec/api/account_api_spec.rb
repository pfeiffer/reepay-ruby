=begin
#API

#REST API to manage Reepay resources

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Reepay::AccountApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AccountApi' do
  before do
    # run before each test
    @instance = Reepay::AccountApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountApi' do
    it 'should create an instance of AccountApi' do
      expect(@instance).to be_instance_of(Reepay::AccountApi)
    end
  end

  # unit tests for create_private_key
  # Create private key
  # 
  # @param [Hash] opts the optional parameters
  # @return [Key]
  describe 'create_private_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_public_key
  # Create public key
  # 
  # @param [Hash] opts the optional parameters
  # @return [Key]
  describe 'create_public_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for expire_private_key
  # Expire private key
  # 
  # @param key Private key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'expire_private_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for expire_public_key
  # Expire public key
  # 
  # @param key Public key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'expire_public_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_webhook_secret
  # Generate new webhook secret
  # 
  # @param [Hash] opts the optional parameters
  # @return [WebhookSettings]
  describe 'generate_webhook_secret test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_account
  # Get account
  # 
  # @param [Hash] opts the optional parameters
  # @return [Account]
  describe 'get_current_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_discount_settings
  # Get discount settings
  # 
  # @param [Hash] opts the optional parameters
  # @return [DiscountSettings]
  describe 'get_discount_settings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_mail_settings
  # Get mail settings
  # 
  # @param [Hash] opts the optional parameters
  # @return [MailSettings]
  describe 'get_mail_settings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_private_keys
  # Get list of private keys
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<Key>]
  describe 'get_private_keys test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_public_keys
  # Get list of public keys
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<Key>]
  describe 'get_public_keys test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_webhook_settings
  # Get webhook settings
  # 
  # @param [Hash] opts the optional parameters
  # @return [WebhookSettings]
  describe 'get_webhook_settings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_account_json
  # Update account
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateAccount] :body 
  # @return [Account]
  describe 'update_account_json test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_discount_settings
  # Update discount settings
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [DiscountSettings] :body 
  # @return [DiscountSettings]
  describe 'update_discount_settings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_mail_settings_json
  # Update mail settings
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [MailSettings] :body 
  # @return [MailSettings]
  describe 'update_mail_settings_json test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_webhook_settings_json
  # Update webhook settings
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateWebhookSettings] :body 
  # @return [WebhookSettings]
  describe 'update_webhook_settings_json test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
