=begin
#API

#REST API to manage Reepay resources

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Reepay::InvoiceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'InvoiceApi' do
  before do
    # run before each test
    @instance = Reepay::InvoiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InvoiceApi' do
    it 'should create an instance of InvoiceApi' do
      expect(@instance).to be_instance_of(Reepay::InvoiceApi)
    end
  end

  # unit tests for cancel_all_dunning_pending
  # Cancel all dunning and pending
  # 
  # @param handle Subscriptiom handle
  # @param [Hash] opts the optional parameters
  # @return [Array<Invoice>]
  describe 'cancel_all_dunning_pending test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_invoice
  # Cancel invoice
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'cancel_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_settle_later
  # Cancel settle later
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'cancel_settle_later test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_transaction
  # Cancel transaction
  # 
  # @param id Invoice id or handle
  # @param transaction Transaction id
  # @param [Hash] opts the optional parameters
  # @return [Transaction]
  describe 'cancel_transaction test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_update_billing_address
  # Create or update invoice billing address
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @option opts [InvoiceBillingAddress] :body 
  # @return [Invoice]
  describe 'create_or_update_billing_address test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_update_shipping_address
  # Create or update invoice shipping address
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @option opts [InvoiceShippingAddress] :body 
  # @return [Invoice]
  describe 'create_or_update_shipping_address test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_billing_address
  # Delete invoice billing address
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'delete_billing_address test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_shipping_address
  # Delete invoice shipping address
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'delete_shipping_address test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for detach_from_subscription
  # Detach from subscription
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'detach_from_subscription test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoice
  # Get invoice
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'get_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoices
  # Get list of invoices
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to get
  # @option opts [Integer] :size Page size to use
  # @option opts [String] :search Optional search expression
  # @option opts [String] :sort Optional sorting expression
  # @return [InvoiceSearch]
  describe 'get_invoices test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for manual_settle
  # Manual settle
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @option opts [ManualSettleTransfer] :body 
  # @return [Invoice]
  describe 'manual_settle test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reactivate_invoice
  # Reactivate invoice
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'reactivate_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for settle
  # Settle
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @option opts [Settle] :body 
  # @return [Invoice]
  describe 'settle test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for transaction
  # Get transaction
  # 
  # @param id Invoice id or handle
  # @param transaction Transaction id
  # @param [Hash] opts the optional parameters
  # @return [Transaction]
  describe 'transaction test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for transaction_details
  # Get transaction details
  # 
  # @param id Invoice id or handle
  # @param transaction Transaction id
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'transaction_details test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for transaction_list
  # Get transaction list
  # 
  # @param id Invoice id or handle
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to get
  # @option opts [Integer] :size Page size to use
  # @option opts [String] :search Optional search expression
  # @option opts [String] :sort Optional sorting expression
  # @return [TransactionSearch]
  describe 'transaction_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
