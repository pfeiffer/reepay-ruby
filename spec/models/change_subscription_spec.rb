=begin
#API

#REST API to manage Reepay resources

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Reepay::ChangeSubscription
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ChangeSubscription' do
  before do
    # run before each test
    @instance = Reepay::ChangeSubscription.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ChangeSubscription' do
    it 'should create an instance of ChangeSubscription' do
      expect(@instance).to be_instance_of(Reepay::ChangeSubscription)
    end
  end
  describe 'test attribute "timing"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["immediate", "renewal"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.timing = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "plan"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "amount"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "quantity"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "billing"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["prorated", "full", "zero_amount", "none"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.billing = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "amount_incl_vat"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "compensation_method"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["full_refund", "prorated_refund", "full_credit", "prorated_credit", "none"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.compensation_method = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "partial_period_handling"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["bill_full", "bill_prorated", "bill_zero_amount", "no_bill"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.partial_period_handling = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "start_date"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "cancel_change"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "add_ons"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "remove_add_ons"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

